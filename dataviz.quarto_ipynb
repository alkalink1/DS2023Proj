{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Initial Graphs (Group) \n",
        "\n",
        "* Importing libraries"
      ],
      "id": "70ab8c7e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# import libraries\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import numpy as np\n",
        "import scipy as sp\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go\n",
        "from datalearning import df"
      ],
      "id": "6ef4e408",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "* Loading and cleaning the data\n",
        "\n",
        "## Data Visualizations\n",
        "\n",
        "### Histogram of Total IMA by Position"
      ],
      "id": "8c249ecf"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# add data\n",
        "sns.histplot(df[df['Position'] == 'Guard'], x=\"Total IMA\", element=\"step\", common_norm=False, kde=True, bins=25, zorder=2, color='#EF553B', label='Guard')\n",
        "sns.histplot(df[df['Position'] == 'Forward'], x=\"Total IMA\", element=\"step\", common_norm=False, kde=True, bins=25, zorder=2, color='#636EFA', label='Forward')\n",
        "sns.histplot(df[df['Position'] == 'Center'], x=\"Total IMA\", element=\"step\", common_norm=False, kde=True, bins=25, zorder=2, color='#00CC96', label='Center')\n",
        "\n",
        "# Making it look readable\n",
        "plt.title(\"Total IMA by Position\", font='Georgia', fontsize=14, fontweight='bold')\n",
        "plt.legend(loc='upper right', fontsize=10, title_fontsize=12, frameon=False)\n",
        "plt.gca().spines['top'].set_visible(False)\n",
        "plt.gca().spines['right'].set_visible(False)\n",
        "plt.gca().spines['left'].set_visible(False)\n",
        "plt.gca().spines['bottom'].set_visible(False)\n",
        "plt.ylabel(\"\")\n",
        "plt.tick_params(axis='x', which='both', length=0)\n",
        "plt.tick_params(axis='y', which='both', length=0)\n",
        "plt.gca().tick_params(axis='y', colors='gray')\n",
        "plt.gca().tick_params(axis='x', colors='gray')\n",
        "plt.grid(True, which='major', color='lightgray', linestyle=':', zorder=0)\n",
        "plt.ylabel(\"Total IMA\", color='gray')\n",
        "plt.xlabel(\"\", color='gray')\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ],
      "id": "b8407761",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Scatterplot of Total Player Load vs Explosive Efforts by Position\n"
      ],
      "id": "28eb4607"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Interactive scatter plot of Total Player Load vs Explosive Efforts by Position\n",
        "\n",
        "#scatter plot w/ plotly\n",
        "fig = px.scatter(df, \n",
        "                 x=\"Player Load Per Minute\", \n",
        "                 y=\"Explosive Efforts\", \n",
        "                 #coloring by position\n",
        "                 color=\"Position\", \n",
        "                 # reducing the excess info on tool tip\n",
        "                 hover_data={\"Total Player Load\": True, \"Explosive Efforts\": True, \"Position\": False}, \n",
        "                 #create trendline using ordinary least squares\n",
        "                 trendline=\"ols\",\n",
        "                 #create separate graphs for each position\n",
        "                 facet_col='Position',\n",
        ")\n",
        "\n",
        "# add gridlines as well as reduce heigh of graph to remove excess space\n",
        "fig.update_yaxes(range=[0, 80], showgrid=True, gridcolor='lightgray') \n",
        "fig.update_xaxes(showgrid=True, gridcolor='lightgray')  \n",
        "\n",
        "#remove individual position tile annotations for cleanliness\n",
        "for annotation in fig.layout.annotations:\n",
        "    if annotation.text.startswith(\"Position=\"):\n",
        "        annotation.text = annotation.text.replace(\"Position=\", \"\")\n",
        "\n",
        "\n",
        "# cleaning up the graph\n",
        "fig.update_layout(\n",
        "    #creating title\n",
        "    title=\"Total Player Load vs Explosive Efforts by Position\",\n",
        "    #x axis title and grid color\n",
        "    xaxis=dict(\n",
        "        showgrid=True,\n",
        "        gridcolor='lightgray'\n",
        "    ),\n",
        "    #y axis title and grid color\n",
        "    yaxis=dict(\n",
        "        title=\"Explosive Efforts\",\n",
        "        showgrid=True,\n",
        "        gridcolor='lightgray',\n",
        "    ),\n",
        "    #remove background color, set font, and remove legend\n",
        "    plot_bgcolor='white',\n",
        "    font_family='Georgia',\n",
        "    showlegend=False,\n",
        "    #add margin spacing\n",
        "    margin=dict(t=55, b=60, l=50, r=50)\n",
        ")\n",
        "\n",
        "#adding overall x axis title\n",
        "fig.add_annotation(\n",
        "    text=\"Total Player Load\",\n",
        "    xref=\"paper\", yref=\"paper\",\n",
        "    x=0.5, y=-0.15,\n",
        "    showarrow=False,\n",
        "    font=dict(family=\"Georgia\", size=14, color=\"black\"),\n",
        "    align=\"center\",\n",
        ")\n",
        "\n",
        "#removing individual x axis titles\n",
        "fig.update_xaxes(title_text=None)\n",
        "\n",
        "fig.show()"
      ],
      "id": "e2752223",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Boxplot of Player Load per Minute by Position"
      ],
      "id": "8641faed"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#Interactive box plot illustrating Player Load per Minute by Position\n",
        "\n",
        "fig = px.box( #Uses plotly to create graph\n",
        "    df,\n",
        "    x=\"Position\",\n",
        "    y=\"Player Load Per Minute\",\n",
        "    color=\"Position\",\n",
        "    points=False\n",
        ")\n",
        "\n",
        "fig.update_layout(\n",
        "    title={\n",
        "        \"text\": \"<b>Player Load per Minute by Position</b>\",  #Bolds and centers title\n",
        "        \"x\": 0.5,\n",
        "        \"xanchor\": \"center\"\n",
        "    },\n",
        "    yaxis_title=\"Player Load per Minute\",\n",
        "    xaxis_title=\"\",\n",
        "    plot_bgcolor='white',\n",
        "    font=dict(\n",
        "        family=\"Georgia\", #Changes font\n",
        "        size=14,  #Increase font size for labels and ticks\n",
        "        color='black'\n",
        "    ),\n",
        "    title_font=dict(\n",
        "        family=\"Georgia\", #Title font\n",
        "        size=18,  #Larger font for the title\n",
        "        color='black'\n",
        "    ),\n",
        "    xaxis=dict(\n",
        "        showgrid=True, #Adds grid lines on xaxis\n",
        "        gridcolor='lightgray',\n",
        "        zeroline=False\n",
        "    ),\n",
        "    yaxis=dict( #Adds grid lines on yaxis\n",
        "        showgrid=True,\n",
        "        gridcolor='lightgray',\n",
        "        zeroline=False\n",
        "    ),\n",
        "\n",
        "     showlegend=False, #Takes away legend\n",
        ")\n",
        "\n",
        "fig.show() #Plots graph"
      ],
      "id": "d412b344",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Line graphs"
      ],
      "id": "f92f5724"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#line graph of player load per minute \n",
        "monthly_avg = df.groupby(['Month', 'Position'], as_index=False).agg({\n",
        "    'Player Load Per Minute': 'mean',\n",
        "    'Explosive Efforts': 'mean',\n",
        "    'Total IMA': 'mean'\n",
        "})\n",
        "\n",
        "fig_load = px.line(\n",
        "    monthly_avg,\n",
        "    x='Month',\n",
        "    y='Player Load Per Minute',\n",
        "    color='Position',\n",
        "    markers=True,\n",
        "    title='Monthly Average: Player Load Per Minute by Position'\n",
        ")\n",
        "\n",
        "fig_load.update_layout(\n",
        "    xaxis_title='Month',\n",
        "    yaxis_title='Avg Player Load Per Minute',\n",
        "    hovermode='x unified',\n",
        "     xaxis=dict(\n",
        "        range=['2023-09-01', '2024-03-30']  # Set desired zoom window\n",
        "    )\n",
        ")\n",
        "\n",
        "fig_load.show()"
      ],
      "id": "39ebf0fd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "fig_effort = px.line(\n",
        "    monthly_avg,\n",
        "    x='Month',\n",
        "    y='Explosive Efforts',\n",
        "    color='Position',\n",
        "    markers=True,\n",
        "    title='Monthly Average: Explosive Efforts by Position'\n",
        ")\n",
        "\n",
        "fig_effort.update_layout(\n",
        "    xaxis_title='Month',\n",
        "    yaxis_title='Avg Explosive Efforts',\n",
        "    hovermode='x unified',\n",
        "     xaxis=dict(\n",
        "        range=['2023-10-01', '2024-03-30']  # Set desired zoom window\n",
        "    )\n",
        ")\n",
        "\n",
        "fig_effort.show()"
      ],
      "id": "ca92f959",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "fig_effort = px.line(\n",
        "    monthly_avg,\n",
        "    x='Month',\n",
        "    y='Total IMA',\n",
        "    color='Position',\n",
        "    markers=True,\n",
        "    title='Monthly Average: Total IMA by Position'\n",
        ")\n",
        "\n",
        "fig_effort.update_layout(\n",
        "    xaxis_title='Month',\n",
        "    yaxis_title='Avg Total IMA',\n",
        "    hovermode='x unified',\n",
        "     xaxis=dict(\n",
        "        range=['2023-10-01', '2024-03-30']  # Set desired zoom window\n",
        "    )\n",
        ")\n",
        "\n",
        "fig_effort.show()"
      ],
      "id": "17204580",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/opt/anaconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}